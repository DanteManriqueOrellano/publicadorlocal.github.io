{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,mB;;;;;;;ACAA,8V;;;;;;;;;;;;;;;;;;;;ACAiD;AACG;AACsD;AAO1G;IAEE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,uCAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,kFAAmB,CAAC,WAAW,CAAC,CAAC;IAC3D,CAAC;IAED,mCAAY,GAAZ;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,oFAAqB,CAAC,WAAW,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,oFAAqB,CAAC,WAAW,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,oFAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,yCAAkB,GAAlB;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,oFAAqB,CAAC,WAAW,CAAC,CAAC;IAC7D,CAAC;IAED,8BAAO,GAAP;QACE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IACD,+BAAQ,GAAR;IAEA,CAAC;IAvBU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGiC,0EAAW;OAFjC,YAAY,CAwBxB;IAAD,mBAAC;CAAA;AAxBwB;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACM;AAC8B;AAC4B;AAEzG,IAAI,MAAM,GAAG,IAAI,gFAAiB,CAAC;IACjC;QACE,EAAE,EAAE,kFAAmB,CAAC,WAAW;QACnC,QAAQ,EAAE,IAAI,kFAAmB,CAAC,wBAAwB,CAAC;KAC5D;IACD;QACE,EAAE,EAAE,oFAAqB,CAAC,WAAW;QACrC,QAAQ,EAAE,IAAI,oFAAqB,CAAC,kBAAkB,CAAC;KACxD;CAEF,CAAC,CAAC;AAEG;IACJ,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC;AAmBD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aAEb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,gFAAiB;aAClB;YACD,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gFAAiB;oBAC1B,UAAU,EAAE,aAAa;iBAC1B;aACF;YACD,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;ACvCtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-transparent text-center\\\">\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <button class=\\\"btn btn-social-icon btn-google\\\" (click)=\\\"signInWithFB()\\\"><span class=\\\"fa fa-google\\\"></span></button>\\r\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"signOut()\\\">Sign out</button>    \\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component,OnInit } from '@angular/core';\nimport { AuthService } from \"angularx-social-login\";\nimport { FacebookLoginProvider, GoogleLoginProvider, LinkedInLoginProvider } from \"angularx-social-login\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  signInWithFB(): void {\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID);\n    console.log(FacebookLoginProvider.PROVIDER_ID)\n    console.log(this.authService.signIn(FacebookLoginProvider.PROVIDER_ID));\n  }\n  \n  signInWithLinkedIn(): void {\n    this.authService.signIn(LinkedInLoginProvider.PROVIDER_ID);\n  }  \n\n  signOut(): void {\n    this.authService.signOut();\n  } \n  ngOnInit(){\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { SocialLoginModule, AuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider, FacebookLoginProvider, LinkedInLoginProvider} from \"angularx-social-login\";\n\nlet config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(\"Google-OAuth-Client-Id\")\n  },\n  {\n    id: FacebookLoginProvider.PROVIDER_ID,\n    provider: new FacebookLoginProvider(\"2055364314701838\")\n  },\n  \n]);\n\nexport function provideConfig() {\n  return config;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    SocialLoginModule\n  ],\n  providers: [\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}